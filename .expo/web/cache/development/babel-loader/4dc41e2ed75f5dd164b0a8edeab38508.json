{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Colors } from \"../../constants/GlobalColors\";\nimport { Place } from \"../../models/place\";\nimport Button from \"../ui/Button\";\nimport ImagePicker from \"./ImagePicker\";\nimport LocationPicker from \"./LocationPicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction PlaceForm(_ref) {\n  var onCreatePlace = _ref.onCreatePlace;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredTitle = _useState2[0],\n      setEnteredTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedImage = _useState4[0],\n      setSelectedImage = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedLocation = _useState6[0],\n      setSelectedLocation = _useState6[1];\n\n  function changeTitleHandler(enteredText) {\n    setEnteredTitle(enteredText);\n  }\n\n  function takeImageHandler(imageUri) {\n    setSelectedImage(imageUri);\n  }\n\n  var pickedLocationHandler = useCallback(function (location) {\n    setSelectedLocation(location);\n  }, []);\n\n  function savePlaceHandler() {\n    var placeDate = new Place(enteredTitle, selectedImage, selectedLocation);\n    onCreatePlace();\n  }\n\n  return _jsxs(ScrollView, {\n    style: styles.form,\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Title\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: changeTitleHandler,\n        value: enteredTitle\n      })]\n    }), _jsx(ImagePicker, {\n      onTakeImage: takeImageHandler\n    }), _jsx(LocationPicker, {\n      onLocationPicker: pickedLocationHandler\n    }), _jsx(Button, {\n      onPress: savePlaceHandler,\n      children: \"Add Place\"\n    })]\n  });\n}\n\nexport default PlaceForm;\nvar styles = StyleSheet.create({\n  form: {\n    flex: 1,\n    padding: 24\n  },\n  label: {\n    fontWeight: \"bold\",\n    marginBottom: 4,\n    color: Colors.primary500\n  },\n  input: {\n    marginVertical: 8,\n    paddingHorizontal: 4,\n    paddingVertical: 8,\n    fontSize: 16,\n    borderBottomColor: Colors.primary700,\n    borderBottomWidth: 2,\n    backgroundColor: Colors.primary100\n  }\n});","map":{"version":3,"names":["useCallback","useState","Colors","Place","Button","ImagePicker","LocationPicker","PlaceForm","onCreatePlace","enteredTitle","setEnteredTitle","selectedImage","setSelectedImage","selectedLocation","setSelectedLocation","changeTitleHandler","enteredText","takeImageHandler","imageUri","pickedLocationHandler","location","savePlaceHandler","placeDate","styles","form","label","input","StyleSheet","create","flex","padding","fontWeight","marginBottom","color","primary500","marginVertical","paddingHorizontal","paddingVertical","fontSize","borderBottomColor","primary700","borderBottomWidth","backgroundColor","primary100"],"sources":["/Users/darrachbarneveld/Downloads/react-native-practical-guide-code-12-native-features/code/02-adding-an-add-place-screen-navigation/components/Places/PlaceForm.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { ScrollView, StyleSheet, Text, TextInput, View } from \"react-native\";\nimport { Colors } from \"../../constants/GlobalColors\";\nimport { Place } from \"../../models/place\";\nimport Button from \"../ui/Button\";\nimport ImagePicker from \"./ImagePicker\";\nimport LocationPicker from \"./LocationPicker\";\n\nfunction PlaceForm({ onCreatePlace }) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [selectedImage, setSelectedImage] = useState(\"\");\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\n\n  function changeTitleHandler(enteredText) {\n    setEnteredTitle(enteredText);\n  }\n\n  function takeImageHandler(imageUri) {\n    setSelectedImage(imageUri);\n  }\n\n  const pickedLocationHandler = useCallback((location) => {\n    setSelectedLocation(location);\n  }, []);\n\n  function savePlaceHandler() {\n    const placeDate = new Place(enteredTitle, selectedImage, selectedLocation);\n    onCreatePlace();\n  }\n\n  return (\n    <ScrollView style={styles.form}>\n      <View>\n        <Text style={styles.label}>Title</Text>\n        <TextInput\n          style={styles.input}\n          onChangeText={changeTitleHandler}\n          value={enteredTitle}\n        />\n      </View>\n      <ImagePicker onTakeImage={takeImageHandler} />\n      <LocationPicker onLocationPicker={pickedLocationHandler} />\n      <Button onPress={savePlaceHandler}>Add Place</Button>\n    </ScrollView>\n  );\n}\n\nexport default PlaceForm;\n\nconst styles = StyleSheet.create({\n  form: { flex: 1, padding: 24 },\n\n  label: { fontWeight: \"bold\", marginBottom: 4, color: Colors.primary500 },\n\n  input: {\n    marginVertical: 8,\n    paddingHorizontal: 4,\n    paddingVertical: 8,\n    fontSize: 16,\n    borderBottomColor: Colors.primary700,\n    borderBottomWidth: 2,\n    backgroundColor: Colors.primary100,\n  },\n});\n"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;;;;;AAEA,SAASC,MAAT;AACA,SAASC,KAAT;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;;;;AAEA,SAASC,SAAT,OAAsC;EAAA,IAAjBC,aAAiB,QAAjBA,aAAiB;;EACpC,gBAAwCP,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOQ,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAA0CT,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOU,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAAgDX,QAAQ,CAAC,EAAD,CAAxD;EAAA;EAAA,IAAOY,gBAAP;EAAA,IAAyBC,mBAAzB;;EAEA,SAASC,kBAAT,CAA4BC,WAA5B,EAAyC;IACvCN,eAAe,CAACM,WAAD,CAAf;EACD;;EAED,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;IAClCN,gBAAgB,CAACM,QAAD,CAAhB;EACD;;EAED,IAAMC,qBAAqB,GAAGnB,WAAW,CAAC,UAACoB,QAAD,EAAc;IACtDN,mBAAmB,CAACM,QAAD,CAAnB;EACD,CAFwC,EAEtC,EAFsC,CAAzC;;EAIA,SAASC,gBAAT,GAA4B;IAC1B,IAAMC,SAAS,GAAG,IAAInB,KAAJ,CAAUM,YAAV,EAAwBE,aAAxB,EAAuCE,gBAAvC,CAAlB;IACAL,aAAa;EACd;;EAED,OACE,MAAC,UAAD;IAAY,KAAK,EAAEe,MAAM,CAACC,IAA1B;IAAA,WACE,MAAC,IAAD;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,KAApB;QAAA;MAAA,EADF,EAEE,KAAC,SAAD;QACE,KAAK,EAAEF,MAAM,CAACG,KADhB;QAEE,YAAY,EAAEX,kBAFhB;QAGE,KAAK,EAAEN;MAHT,EAFF;IAAA,EADF,EASE,KAAC,WAAD;MAAa,WAAW,EAAEQ;IAA1B,EATF,EAUE,KAAC,cAAD;MAAgB,gBAAgB,EAAEE;IAAlC,EAVF,EAWE,KAAC,MAAD;MAAQ,OAAO,EAAEE,gBAAjB;MAAA;IAAA,EAXF;EAAA,EADF;AAeD;;AAED,eAAed,SAAf;AAEA,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,IAAI,EAAE;IAAEK,IAAI,EAAE,CAAR;IAAWC,OAAO,EAAE;EAApB,CADyB;EAG/BL,KAAK,EAAE;IAAEM,UAAU,EAAE,MAAd;IAAsBC,YAAY,EAAE,CAApC;IAAuCC,KAAK,EAAE/B,MAAM,CAACgC;EAArD,CAHwB;EAK/BR,KAAK,EAAE;IACLS,cAAc,EAAE,CADX;IAELC,iBAAiB,EAAE,CAFd;IAGLC,eAAe,EAAE,CAHZ;IAILC,QAAQ,EAAE,EAJL;IAKLC,iBAAiB,EAAErC,MAAM,CAACsC,UALrB;IAMLC,iBAAiB,EAAE,CANd;IAOLC,eAAe,EAAExC,MAAM,CAACyC;EAPnB;AALwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}