{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Colors } from \"../../constants/GlobalColors\";\nimport { getCurrentPositionAsync, useForegroundPermissions, PermissionStatus } from \"expo-location\";\nimport OutlinedButton from \"../ui/OutlinedButton\";\nimport { getMapPreview } from \"../../util/locations\";\nimport { useNavigation, useRoute, useIsFocused } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LocationPicker() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var isFocued = useIsFocused();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedLocation = _useState2[0],\n      setPickedLocation = _useState2[1];\n\n  var _useForegroundPermiss = useForegroundPermissions(),\n      _useForegroundPermiss2 = _slicedToArray(_useForegroundPermiss, 2),\n      locationPermissionInfo = _useForegroundPermiss2[0],\n      requestPermisson = _useForegroundPermiss2[1];\n\n  var mapPickedLocation = route.params && {\n    lat: route.params.pickedLat,\n    lng: route.params.pickedLng\n  };\n  useEffect(function () {\n    if (mapPickedLocation) {\n      setPickedLocation(mapPickedLocation);\n    }\n  }, [mapPickedLocation]);\n\n  function verifyPermission() {\n    var permissionResponse;\n    return _regeneratorRuntime.async(function verifyPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(locationPermissionInfo.status === PermissionStatus.UNDETERMINED)) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(requestPermisson());\n\n          case 3:\n            permissionResponse = _context.sent;\n            return _context.abrupt(\"return\", permissionResponse.granted);\n\n          case 5:\n            if (!(locationPermissionInfo.status === PermissionStatus.DENIED)) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert(\"Insufficient Permissions!\", \"You need to grant location permissions to use this app\");\n            return _context.abrupt(\"return\", false);\n\n          case 8:\n            return _context.abrupt(\"return\", true);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function findLocationHandler() {\n    var hasPermission, location;\n    return _regeneratorRuntime.async(function findLocationHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermission());\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(getCurrentPositionAsync({}));\n\n          case 7:\n            location = _context2.sent;\n            setPickedLocation({\n              lat: location.coords.latitude,\n              lng: location.coords.longitude\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function pickOnMapHandler() {\n    navigation.navigate(\"Map\");\n  }\n\n  var locationPreview = _jsx(Text, {\n    children: \"No Location Picked Yet\"\n  });\n\n  if (pickedLocation) {\n    locationPreview = _jsx(Image, {\n      style: styles.image,\n      source: {\n        uri: getMapPreview(pickedLocation.lat, pickedLocation.lng)\n      }\n    });\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.mapPreview,\n      children: locationPreview\n    }), _jsxs(View, {\n      style: styles.actions,\n      children: [_jsx(OutlinedButton, {\n        icon: \"location\",\n        onPress: findLocationHandler,\n        children: \"Locate User\"\n      }), _jsx(OutlinedButton, {\n        icon: \"map\",\n        onPress: pickOnMapHandler,\n        children: \"Pick on Map\"\n      })]\n    })]\n  });\n}\n\nexport default LocationPicker;\nvar styles = StyleSheet.create({\n  mapPreview: {\n    width: \"100%\",\n    height: 200,\n    marginVertical: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary100,\n    borderRadius: 4,\n    overflow: \"hidden\"\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 4\n  }\n});","map":{"version":3,"names":["useEffect","useState","Colors","getCurrentPositionAsync","useForegroundPermissions","PermissionStatus","OutlinedButton","getMapPreview","useNavigation","useRoute","useIsFocused","LocationPicker","navigation","route","isFocued","pickedLocation","setPickedLocation","locationPermissionInfo","requestPermisson","mapPickedLocation","params","lat","pickedLat","lng","pickedLng","verifyPermission","status","UNDETERMINED","permissionResponse","granted","DENIED","Alert","alert","findLocationHandler","hasPermission","location","coords","latitude","longitude","pickOnMapHandler","navigate","locationPreview","styles","image","uri","mapPreview","actions","StyleSheet","create","width","height","marginVertical","justifyContent","alignItems","backgroundColor","primary100","borderRadius","overflow","flexDirection"],"sources":["/Users/darrachbarneveld/Downloads/react-native-practical-guide-code-12-native-features/code/02-adding-an-add-place-screen-navigation/components/Places/LocationPicker.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Alert, Image, StyleSheet, Text, View } from \"react-native\";\nimport { Colors } from \"../../constants/GlobalColors\";\nimport {\n  getCurrentPositionAsync,\n  useForegroundPermissions,\n  PermissionStatus,\n} from \"expo-location\";\nimport OutlinedButton from \"../ui/OutlinedButton\";\nimport { getMapPreview } from \"../../util/locations\";\nimport {\n  useNavigation,\n  useRoute,\n  useIsFocused,\n} from \"@react-navigation/native\";\n\nfunction LocationPicker() {\n  const navigation = useNavigation();\n  const route = useRoute();\n  const isFocued = useIsFocused();\n\n  const [pickedLocation, setPickedLocation] = useState();\n  const [locationPermissionInfo, requestPermisson] = useForegroundPermissions();\n\n  const mapPickedLocation = route.params && {\n    lat: route.params.pickedLat,\n    lng: route.params.pickedLng,\n  };\n\n  useEffect(() => {\n    if (mapPickedLocation) {\n      setPickedLocation(mapPickedLocation);\n    }\n  }, [mapPickedLocation]);\n\n  async function verifyPermission() {\n    if (locationPermissionInfo.status === PermissionStatus.UNDETERMINED) {\n      const permissionResponse = await requestPermisson();\n\n      return permissionResponse.granted;\n    }\n\n    if (locationPermissionInfo.status === PermissionStatus.DENIED) {\n      Alert.alert(\n        \"Insufficient Permissions!\",\n        \"You need to grant location permissions to use this app\"\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n\n  async function findLocationHandler() {\n    const hasPermission = await verifyPermission();\n\n    if (!hasPermission) return;\n\n    const location = await getCurrentPositionAsync({});\n\n    setPickedLocation({\n      lat: location.coords.latitude,\n      lng: location.coords.longitude,\n    });\n  }\n\n  function pickOnMapHandler() {\n    navigation.navigate(\"Map\");\n  }\n\n  let locationPreview = <Text>No Location Picked Yet</Text>;\n\n  if (pickedLocation) {\n    locationPreview = (\n      <Image\n        style={styles.image}\n        source={{\n          uri: getMapPreview(pickedLocation.lat, pickedLocation.lng),\n        }}\n      />\n    );\n  }\n\n  return (\n    <View>\n      <View style={styles.mapPreview}>{locationPreview}</View>\n      <View style={styles.actions}>\n        <OutlinedButton icon=\"location\" onPress={findLocationHandler}>\n          Locate User\n        </OutlinedButton>\n        <OutlinedButton icon=\"map\" onPress={pickOnMapHandler}>\n          Pick on Map\n        </OutlinedButton>\n      </View>\n    </View>\n  );\n}\n\nexport default LocationPicker;\n\nconst styles = StyleSheet.create({\n  mapPreview: {\n    width: \"100%\",\n    height: 200,\n    marginVertical: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary100,\n    borderRadius: 4,\n    overflow: \"hidden\",\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 4,\n  },\n});\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;;AAEA,SAASC,MAAT;AACA,SACEC,uBADF,EAEEC,wBAFF,EAGEC,gBAHF,QAIO,eAJP;AAKA,OAAOC,cAAP;AACA,SAASC,aAAT;AACA,SACEC,aADF,EAEEC,QAFF,EAGEC,YAHF,QAIO,0BAJP;;;;AAMA,SAASC,cAAT,GAA0B;EACxB,IAAMC,UAAU,GAAGJ,aAAa,EAAhC;EACA,IAAMK,KAAK,GAAGJ,QAAQ,EAAtB;EACA,IAAMK,QAAQ,GAAGJ,YAAY,EAA7B;;EAEA,gBAA4CT,QAAQ,EAApD;EAAA;EAAA,IAAOc,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,4BAAmDZ,wBAAwB,EAA3E;EAAA;EAAA,IAAOa,sBAAP;EAAA,IAA+BC,gBAA/B;;EAEA,IAAMC,iBAAiB,GAAGN,KAAK,CAACO,MAAN,IAAgB;IACxCC,GAAG,EAAER,KAAK,CAACO,MAAN,CAAaE,SADsB;IAExCC,GAAG,EAAEV,KAAK,CAACO,MAAN,CAAaI;EAFsB,CAA1C;EAKAxB,SAAS,CAAC,YAAM;IACd,IAAImB,iBAAJ,EAAuB;MACrBH,iBAAiB,CAACG,iBAAD,CAAjB;IACD;EACF,CAJQ,EAIN,CAACA,iBAAD,CAJM,CAAT;;EAMA,SAAeM,gBAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MACMR,sBAAsB,CAACS,MAAvB,KAAkCrB,gBAAgB,CAACsB,YADzD;cAAA;cAAA;YAAA;;YAAA;YAAA,iCAEqCT,gBAAgB,EAFrD;;UAAA;YAEUU,kBAFV;YAAA,iCAIWA,kBAAkB,CAACC,OAJ9B;;UAAA;YAAA,MAOMZ,sBAAsB,CAACS,MAAvB,KAAkCrB,gBAAgB,CAACyB,MAPzD;cAAA;cAAA;YAAA;;YAQIC,KAAK,CAACC,KAAN,CACE,2BADF,EAEE,wDAFF;YARJ,iCAaW,KAbX;;UAAA;YAAA,iCAgBS,IAhBT;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAmBA,SAAeC,mBAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAC8BR,gBAAgB,EAD9C;;UAAA;YACQS,aADR;;YAAA,IAGOA,aAHP;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAAA;YAAA,iCAKyB/B,uBAAuB,CAAC,EAAD,CALhD;;UAAA;YAKQgC,QALR;YAOEnB,iBAAiB,CAAC;cAChBK,GAAG,EAAEc,QAAQ,CAACC,MAAT,CAAgBC,QADL;cAEhBd,GAAG,EAAEY,QAAQ,CAACC,MAAT,CAAgBE;YAFL,CAAD,CAAjB;;UAPF;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAaA,SAASC,gBAAT,GAA4B;IAC1B3B,UAAU,CAAC4B,QAAX,CAAoB,KAApB;EACD;;EAED,IAAIC,eAAe,GAAG,KAAC,IAAD;IAAA;EAAA,EAAtB;;EAEA,IAAI1B,cAAJ,EAAoB;IAClB0B,eAAe,GACb,KAAC,KAAD;MACE,KAAK,EAAEC,MAAM,CAACC,KADhB;MAEE,MAAM,EAAE;QACNC,GAAG,EAAErC,aAAa,CAACQ,cAAc,CAACM,GAAhB,EAAqBN,cAAc,CAACQ,GAApC;MADZ;IAFV,EADF;EAQD;;EAED,OACE,MAAC,IAAD;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEmB,MAAM,CAACG,UAApB;MAAA,UAAiCJ;IAAjC,EADF,EAEE,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACI,OAApB;MAAA,WACE,KAAC,cAAD;QAAgB,IAAI,EAAC,UAArB;QAAgC,OAAO,EAAEb,mBAAzC;QAAA;MAAA,EADF,EAIE,KAAC,cAAD;QAAgB,IAAI,EAAC,KAArB;QAA2B,OAAO,EAAEM,gBAApC;QAAA;MAAA,EAJF;IAAA,EAFF;EAAA,EADF;AAaD;;AAED,eAAe5B,cAAf;AAEA,IAAM+B,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BH,UAAU,EAAE;IACVI,KAAK,EAAE,MADG;IAEVC,MAAM,EAAE,GAFE;IAGVC,cAAc,EAAE,CAHN;IAIVC,cAAc,EAAE,QAJN;IAKVC,UAAU,EAAE,QALF;IAMVC,eAAe,EAAEpD,MAAM,CAACqD,UANd;IAOVC,YAAY,EAAE,CAPJ;IAQVC,QAAQ,EAAE;EARA,CADmB;EAW/BX,OAAO,EAAE;IACPY,aAAa,EAAE,KADR;IAEPN,cAAc,EAAE,cAFT;IAGPC,UAAU,EAAE;EAHL,CAXsB;EAiB/BV,KAAK,EAAE;IACLM,KAAK,EAAE,MADF;IAELC,MAAM,EAAE,MAFH;IAGLM,YAAY,EAAE;EAHT;AAjBwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}