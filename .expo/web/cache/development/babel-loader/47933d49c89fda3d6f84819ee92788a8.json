{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Map = function Map() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedLocation = _useState2[0],\n      setSelectedLocation = _useState2[1];\n\n  var initialRegion = {\n    latitude: 37.78825,\n    longitude: -122.4324,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421\n  };\n\n  function selectLocationHandler(event) {\n    var lat = event.nativeEvent.coordinate.latitude;\n    var lng = event.nativeEvent.coordinate.longitude;\n    setSelectedLocation({\n      lat: lat,\n      lng: lng\n    });\n  }\n\n  function savedPickedLocationHandler() {\n    if (!selectedLocation) {\n      Alert.alert(\"No Location Picked\", \"Select a location on the map!\");\n    }\n  }\n\n  return _jsx(MapView, {\n    style: styles.map,\n    initialRegion: initialRegion,\n    onPress: selectLocationHandler,\n    children: selectedLocation && _jsx(Marker, {\n      title: \"Picked Location\",\n      coordinate: {\n        latitude: selectedLocation.lat,\n        longitude: selectedLocation.lng\n      }\n    })\n  });\n};\n\nexport default Map;\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","MapView","Marker","Map","selectedLocation","setSelectedLocation","initialRegion","latitude","longitude","latitudeDelta","longitudeDelta","selectLocationHandler","event","lat","nativeEvent","coordinate","lng","savedPickedLocationHandler","Alert","alert","styles","map","StyleSheet","create","flex"],"sources":["/Users/darrachbarneveld/Downloads/react-native-practical-guide-code-12-native-features/code/02-adding-an-add-place-screen-navigation/screens/Map.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Alert, StyleSheet } from \"react-native\";\nimport MapView, { Marker } from \"react-native-maps\";\n\nconst Map = () => {\n  const [selectedLocation, setSelectedLocation] = useState();\n\n  const initialRegion = {\n    latitude: 37.78825,\n    longitude: -122.4324,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421,\n  };\n\n  function selectLocationHandler(event) {\n    const lat = event.nativeEvent.coordinate.latitude;\n    const lng = event.nativeEvent.coordinate.longitude;\n\n    setSelectedLocation({ lat: lat, lng: lng });\n  }\n\n  function savedPickedLocationHandler() {\n    if (!selectedLocation) {\n      Alert.alert(\"No Location Picked\", \"Select a location on the map!\");\n    }\n  }\n\n  return (\n    <MapView\n      style={styles.map}\n      initialRegion={initialRegion}\n      onPress={selectLocationHandler}\n    >\n      {selectedLocation && (\n        <Marker\n          title=\"Picked Location\"\n          coordinate={{\n            latitude: selectedLocation.lat,\n            longitude: selectedLocation.lng,\n          }}\n        />\n      )}\n    </MapView>\n  );\n};\n\nexport default Map;\n\nconst styles = StyleSheet.create({\n  map: {\n    flex: 1,\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,gBAAgDH,QAAQ,EAAxD;EAAA;EAAA,IAAOI,gBAAP;EAAA,IAAyBC,mBAAzB;;EAEA,IAAMC,aAAa,GAAG;IACpBC,QAAQ,EAAE,QADU;IAEpBC,SAAS,EAAE,CAAC,QAFQ;IAGpBC,aAAa,EAAE,MAHK;IAIpBC,cAAc,EAAE;EAJI,CAAtB;;EAOA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;IACpC,IAAMC,GAAG,GAAGD,KAAK,CAACE,WAAN,CAAkBC,UAAlB,CAA6BR,QAAzC;IACA,IAAMS,GAAG,GAAGJ,KAAK,CAACE,WAAN,CAAkBC,UAAlB,CAA6BP,SAAzC;IAEAH,mBAAmB,CAAC;MAAEQ,GAAG,EAAEA,GAAP;MAAYG,GAAG,EAAEA;IAAjB,CAAD,CAAnB;EACD;;EAED,SAASC,0BAAT,GAAsC;IACpC,IAAI,CAACb,gBAAL,EAAuB;MACrBc,KAAK,CAACC,KAAN,CAAY,oBAAZ,EAAkC,+BAAlC;IACD;EACF;;EAED,OACE,KAAC,OAAD;IACE,KAAK,EAAEC,MAAM,CAACC,GADhB;IAEE,aAAa,EAAEf,aAFjB;IAGE,OAAO,EAAEK,qBAHX;IAAA,UAKGP,gBAAgB,IACf,KAAC,MAAD;MACE,KAAK,EAAC,iBADR;MAEE,UAAU,EAAE;QACVG,QAAQ,EAAEH,gBAAgB,CAACS,GADjB;QAEVL,SAAS,EAAEJ,gBAAgB,CAACY;MAFlB;IAFd;EANJ,EADF;AAiBD,CAxCD;;AA0CA,eAAeb,GAAf;AAEA,IAAMiB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,GAAG,EAAE;IACHG,IAAI,EAAE;EADH;AAD0B,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}