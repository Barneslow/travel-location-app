{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Colors } from \"../../constants/GlobalColors\";\nimport OutlinedButton from \"../ui/OutlinedButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LocationPicker() {\n  function findLocationHandler() {}\n\n  function pickOnMapHandler() {}\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.mapPreview\n    }), _jsxs(View, {\n      style: styles.actions,\n      children: [_jsx(OutlinedButton, {\n        icon: \"location\",\n        onPress: findLocationHandler,\n        children: \"Locate User\"\n      }), _jsx(OutlinedButton, {\n        icon: \"map\",\n        onPress: pickOnMapHandler,\n        children: \"Pick on Map\"\n      })]\n    })]\n  });\n}\n\nexport default LocationPicker;\nvar styles = StyleSheet.create({\n  mapPreview: {\n    width: \"100%\",\n    height: 200,\n    marginVertical: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary100,\n    borderRadius: 4\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["Colors","OutlinedButton","LocationPicker","findLocationHandler","pickOnMapHandler","styles","mapPreview","actions","StyleSheet","create","width","height","marginVertical","justifyContent","alignItems","backgroundColor","primary100","borderRadius","flexDirection"],"sources":["/Users/darrachbarneveld/Downloads/react-native-practical-guide-code-12-native-features/code/02-adding-an-add-place-screen-navigation/components/Places/LocationPicker.js"],"sourcesContent":["import { StyleSheet, View } from \"react-native\";\nimport { Colors } from \"../../constants/GlobalColors\";\nimport OutlinedButton from \"../ui/OutlinedButton\";\n\nfunction LocationPicker() {\n  function findLocationHandler() {}\n\n  function pickOnMapHandler() {}\n\n  return (\n    <View>\n      <View style={styles.mapPreview}></View>\n      <View style={styles.actions}>\n        <OutlinedButton icon=\"location\" onPress={findLocationHandler}>\n          Locate User\n        </OutlinedButton>\n        <OutlinedButton icon=\"map\" onPress={pickOnMapHandler}>\n          Pick on Map\n        </OutlinedButton>\n      </View>\n    </View>\n  );\n}\n\nexport default LocationPicker;\n\nconst styles = StyleSheet.create({\n  mapPreview: {\n    width: \"100%\",\n    height: 200,\n    marginVertical: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary100,\n    borderRadius: 4,\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n});\n"],"mappings":";;AACA,SAASA,MAAT;AACA,OAAOC,cAAP;;;;AAEA,SAASC,cAAT,GAA0B;EACxB,SAASC,mBAAT,GAA+B,CAAE;;EAEjC,SAASC,gBAAT,GAA4B,CAAE;;EAE9B,OACE,MAAC,IAAD;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC;IAApB,EADF,EAEE,MAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,OAApB;MAAA,WACE,KAAC,cAAD;QAAgB,IAAI,EAAC,UAArB;QAAgC,OAAO,EAAEJ,mBAAzC;QAAA;MAAA,EADF,EAIE,KAAC,cAAD;QAAgB,IAAI,EAAC,KAArB;QAA2B,OAAO,EAAEC,gBAApC;QAAA;MAAA,EAJF;IAAA,EAFF;EAAA,EADF;AAaD;;AAED,eAAeF,cAAf;AAEA,IAAMG,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,UAAU,EAAE;IACVI,KAAK,EAAE,MADG;IAEVC,MAAM,EAAE,GAFE;IAGVC,cAAc,EAAE,CAHN;IAIVC,cAAc,EAAE,QAJN;IAKVC,UAAU,EAAE,QALF;IAMVC,eAAe,EAAEf,MAAM,CAACgB,UANd;IAOVC,YAAY,EAAE;EAPJ,CADmB;EAU/BV,OAAO,EAAE;IACPW,aAAa,EAAE,KADR;IAEPL,cAAc,EAAE,cAFT;IAGPC,UAAU,EAAE;EAHL;AAVsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}